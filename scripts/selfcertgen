#!/bin/bash

source /etc/profile
source /etc/jelastic/metainf.conf 

TARGET_LAYER=$3
ENV_NAME=$2
MYSQL_USER=$1

if [ -z "${ENV_NAME}" ]; then
    NODE_NAME_LENGTH=$(hostname|grep -o 'node[0-9]*-'|wc -c)
    ENV_NAME=$(hostname|cut -c ${NODE_NAME_LENGTH}- 2>/dev/null)
fi

if [ -z "${TARGET_LAYER}" ]; then
    TARGET_LAYER=${COMPUTE_TYPE}
fi

CERT_DIR="/var/lib/jelastic/keys/SSL-TLS";
[ -d "$CERT_DIR" ] || mkdir -p "$CERT_DIR";

[ -z "$KEY_COUNTRY" ] && export KEY_COUNTRY="CH"
[ -z "$KEY_PROVINCE" ] && export KEY_PROVINCE="8200"
[ -z "$KEY_CITY" ] && export KEY_CITY="Schaffhausen";
[ -z "$KEY_ORG" ] && export KEY_ORG="Virtuozzo International GmbH";
[ -z "$KEY_EMAIL" ] && export KEY_EMAIL="me@myhost.mydomain"
[ -z "$KEY_OU" ] && export KEY_OU="MyOrganizationalUnit"
[ -z "$KEY_SIZE" ] && export KEY_SIZE=2048
[ -z "$KEY_HOST" ] && export KEY_HOST=$(hostname)
[ -z "$KEY_EXPIRE" ] && export KEY_EXPIRE=3650
[ -z "$MYSQL_USER" ] && export MYSQL_USER="root"

ALTNAME=$(ip a | grep -A1 venet0 | grep inet | awk '{print $2}'| sed 's/\/[0-9]*//g' | head -n 2|tail -n 1)

#generating server key, cert and root cert
if [ ! -f ${CERT_DIR}/root.crt ]; then
    if [ ! -f ${CERT_DIR}/server/root.crt ]; then
        RANDFILE=/tmp/.random openssl genrsa ${KEY_SIZE} > ${CERT_DIR}/root.key
        RANDFILE=/tmp/.random openssl req -new -x509 -nodes -days 3650 -key ${CERT_DIR}/root.key -subj "/C=$KEY_COUNTRY/ST=$KEY_PROVINCE/L=$KEY_CITY/O=$KEY_ORG/CN=${TARGET_LAYER}.${ENV_NAME}" > ${CERT_DIR}/root.crt
        ROOT_CERT="${CERT_DIR}/root.crt"
        ROOT_KEY="${CERT_DIR}/root.key"
    else
        echo "Root CA certificate is already present ${CERT_DIR}/server/root.crt"
        ROOT_CERT="${CERT_DIR}/server/root.crt"
        ROOT_KEY="${CERT_DIR}/server/root.key"
    fi
else
    echo "Root CA certificate is already present ${CERT_DIR}/root.crt"
    ROOT_CERT="${CERT_DIR}/root.crt"
    ROOT_KEY="${CERT_DIR}/root.key"
fi

if [ ! -f ${CERT_DIR}/server.crt ]; then
echo "subjectAltName = @alt_names

[alt_names]
IP.1 = ${ALTNAME}" > /tmp/altname.ext
    if [ ! -f ${CERT_DIR}/server/server.crt ]; then
        RANDFILE=/tmp/.random openssl req -newkey rsa:2048 -days 3650 -nodes -subj "/C=$KEY_COUNTRY/ST=$KEY_PROVINCE/L=$KEY_CITY/O=$KEY_ORG/CN=${KEY_HOST}" -keyout ${CERT_DIR}/server.key > ${CERT_DIR}/server-req.pem
        RANDFILE=/tmp/.random openssl x509 -req -in ${CERT_DIR}/server-req.pem -days 3650 -CA ${ROOT_CERT} -CAkey ${ROOT_KEY} -set_serial 01 -extfile /tmp/altname.ext > ${CERT_DIR}/server.crt
        chmod 400 ${CERT_DIR}/root.key ${CERT_DIR}/server.key ${CERT_DIR}/server.crt ${CERT_DIR}/root.crt
    else
        echo "Server certificate is already present ${CERT_DIR}/server/server.crt "
    fi
else
    echo "Server certificate is already present ${CERT_DIR}/server.crt"
fi

rm -f /var/lib/jelastic/keys/SSL-TLS/server-req.pem

if [ "x${MYSQL_USER}" == "xroot" ]; then
    CLIENT_CERT_NAME="client"
else
    CLIENT_CERT_NAME="${MYSQL_USER}"
fi

if [ ! -f ${CERT_DIR}/${CLIENT_CERT_NAME}.crt ]; then
    openssl genrsa -out ${CERT_DIR}/${CLIENT_CERT_NAME}.key ${KEY_SIZE}
    openssl req -new -key ${CERT_DIR}/${CLIENT_CERT_NAME}.key -out ${CERT_DIR}/${CLIENT_CERT_NAME}.csr -subj "/C=$KEY_COUNTRY/ST=$KEY_PROVINCE/L=$KEY_CITY/O=$KEY_ORG/CN=$MYSQL_USER"
    #signing the client cert
    openssl x509 -req -in ${CERT_DIR}/${CLIENT_CERT_NAME}.csr -CA ${ROOT_CERT} -CAkey ${ROOT_KEY} -out ${CERT_DIR}/${CLIENT_CERT_NAME}.crt -CAcreateserial
fi

if [ "$UID" == '0' ]; then
    chmod 600 /var/lib/jelastic/keys/SSL-TLS/*
    chown -R 700:700 /var/lib/jelastic/keys/SSL-TLS/* /var/lib/jelastic/keys/SSL-TLS
fi
